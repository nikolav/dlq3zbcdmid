schema {
  query: Query
  mutation: Mutation
}

scalar JsonData
scalar JsonDocsTags
scalar NumberReal

#########
## @types

type Var {
  id: ID!
  name: String!
  value: String
}

type StorageFileInfo {
  id: ID!
  file_id: String!
  user_id: Int!
  title: String!
  description: String!
  filename: String!
  path: String!
  size: Int!
  mimetype: String!
  public: Boolean!
  created_at: String!
  updated_at: String!
}

type StorageFileRemovedDataInfo {
  file_id: String!
  user_id: Int!
  title: String!
  description: String!
  filename: String!
  path: String!
  size: Int!
  mimetype: String!
  public: Boolean!
}

type StorageFileRemovedInfoSuccess {
  id: ID!
  data: StorageFileRemovedDataInfo!
  created_at: String!
  updated_at: String!
}

type StorageFileRemovedInfo {
  error: String
  file: StorageFileRemovedInfoSuccess
}

type User {
  id: ID!
  email: String!
  password: String!
  products: [Product!]
  posts: [Post!]
  is_approved: Boolean
  created_at: String
  updated_at: String
}

type Product {
  id: ID!
  user_id: ID
  name: String
  price: NumberReal
  price_history: [JsonData!]!
  stock: NumberReal
  stockType: String
  onSale: Boolean
  description: String
  user: User
  tags: [String!]
  docs: [JsonData!]
  created_at: String
  updated_at: String
}

type ProductWithAmount {
  amount: NumberReal
  id: ID!
  user_id: ID
  name: String
  price: NumberReal
  price_history: [JsonData!]!
  stock: NumberReal
  stockType: String
  onSale: Boolean
  description: String
  user: User
  tags: [String!]
  docs: [JsonData!]
  created_at: String
  updated_at: String
}

type Company {
  id: ID!
  email: String!
  password: String!
  created_at: String!
  updated_at: String!
}

type Order {
  id: ID!
  code: String
  description: String
  user_id: ID
  completed: Boolean
  canceled: Boolean
  status: Int
  products: [ProductWithAmount!]
  delivery_at: String
  created_at: String!
  updated_at: String!
}

type Post {
  id: ID!
  title: String
  content: String
  user_id: ID
  user: User
  tags: [String!]
  docs: [JsonData!]
  created_at: String
  updated_at: String
}

input InputProduct {
  name: String
  category: String
  price: NumberReal
  stock: NumberReal
  stockType: String
  onSale: Boolean
  description: String
}

input InputPost {
  title: String
  content: String
}

type ResultTotalAmountOrdered {
  amount: Int!
}

#########
## @Query

type Query {
  # api --status
  status: String!

  # vars
  vars: [Var!]!

  # companies, users
  companiesList(approved: Boolean, district: String, all: Boolean): [User!]!
  users: [User!]!
  usersById(uid: ID!): User
  companiesCountedByDistrict: JsonData!

  # products
  getOrderProductsDeliveryDate(oid: ID!, uid: ID!): JsonData
  getOrderProductsStatusByCompany(oid: ID!, uid: ID!): JsonData
  productsListAll: [Product!]!
  productsListByTags(tags: [String!]!): [Product!]!
  productsListByUser(user_id: ID!): [Product!]!
  productsListExact(products: [ID!]!): [Product!]!
  productsListPopular(length: Int): [Product!]!
  productsListPromo: [Product!]!
  productsListPromotedAll: [Product!]!
  productsSearch(query: JsonData): [Product!]!
  productsTotalAmountOrdered(pid: ID!): ResultTotalAmountOrdered!

  # orders
  ordersListByUser(uid: ID!): [Order!]!
  ordersOne(oid: ID!): Order
  ordersProducts(oid: ID!): [ProductWithAmount!]!
  ordersReceived: [Order!]!
  ordersReceivedProducts(order_id: ID!): [ProductWithAmount!]!
  
  # posts
  postsList(uid: ID): [Post!]!
  postsImages(id: ID): [JsonData!]!

  # storage
  storageList: [StorageFileInfo!]!
  storageListAll: [StorageFileInfo!]!

  # docs
  docsByTopic(topic: String!): [JsonData!]!
  docByDocId(doc_id: String!): JsonData!
  tagsByDocId(id: ID!): [String!]!

  # packages --products
  packagesIsPromoted(pid: ID!): Boolean!

  # pdf
  pdfDownload(data: JsonData!): String!

  # accounts
  accountsIncompleteProfileFields: [String!]!
}

############
## @Mutation

type Mutation {
  # products
  productsUpsert(data: InputProduct!, id: ID): Product!
  productsRm(id: ID!): Product
  orderProductsStatusByCompany(oid: ID!, uid: ID!, status: Int!): String
  orderProductsDeliveryDateByCompany(oid: ID!, uid: ID!, date: String!): String

  # orders
  ordersPlace(data: JsonData!, items: JsonData!): ID
  manageOrderData(oid: ID!, data: JsonData!): Order

  # posts
  postsUpsert(data: InputPost!, id: ID): Post!
  postsRemove(id: ID!): Post
  postsImagesDrop(id: ID!): Post

  # docs
  docsUpsert(topic: String!, data: JsonData!, id: ID): JsonData!
  docsRm(topic: String!, id: ID!): JsonData
  docUpsert(doc_id: String!, data: JsonData!): JsonData!
  docsRmById(id: ID!): JsonData

  # manage docs/tags: id, { "@tag/foo": true, "@tag/bar": false }
  docsTags(id: ID!, tags: JsonDocsTags!): JsonDocsTags!

  # storage
  storageRemoveFile(file_id: String!): StorageFileRemovedInfo

  # packages --products
  packagesSetPromoted(pid: ID!, status: Boolean): ID

  # accounts
  accountsArchive(uid: ID!): ID
  accountsDrop(uid: ID!): ID
  accountsSendVerifyEmailLink(uid: ID!, url: String!): ID
  accountsVeifyEmail(data: JsonData!): String
  accountsUpgradeUserCompany(uid: ID!): ID
}
